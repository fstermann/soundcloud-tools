name: soundcloud-archive

on:
  workflow_dispatch:
    inputs:
      week:
        description: 'The week to archive. Defaults to 0 for the current week.'
        required: false
        type: number
        default: 0
  schedule:
    # Weekly: Runs every Sunday at 6 AM UTC
    - cron: "0 6 * * 0"
    - cron: "0 18 * * 3"
    - cron: "10 6 * * 0"

jobs:
  archive:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'poetry'
      - run: poetry install
      - name: Set CLI arguments based on cron
        run: |
          case "${{ github.event.schedule }}" in
            "0 6 * * 0") # Old Tracks First Half (Wednesday at 6 PM UTC)
              echo "CLI_ARGS='--week 0 --first --release-type old'" >> "$GITHUB_ENV"
              ;;
            "0 18 * * 3") # Old Tracks Second Half (Sunday at 6 AM UTC)
              echo "CLI_ARGS='--week 0 --second --release-type old'" >> "$GITHUB_ENV"
              ;;
            "10 6 * * 0") # New Tracks (Sunday at 6:10 AM UTC)
              echo "CLI_ARGS='--week 0 --release-type new'" >> "$GITHUB_ENV"
              ;;
            *)
              echo "CLI_ARGS='--week 0'" >> "$GITHUB_ENV"
              ;;
          esac
      - name: Archive weekly
        env:
          OAUTH_TOKEN: ${{ secrets.OAUTH_TOKEN }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          DATADOME_CLIENTID: ${{ secrets.DATADOME_CLIENTID }}
          USER_ID: ${{ secrets.USER_ID }}
          PROXY: ${{ secrets.PROXY }}
          SC_A_ID: ${{ secrets.SC_A_ID }}
        run: |
          poetry run soundcloud_tools $CLI_ARGS --exclude-liked
